basePath: /v1
definitions:
  model.CustomerLimitWrapper:
    properties:
      available_amount:
        type: integer
      created_at:
        type: string
      id:
        type: string
      limit_amount:
        type: integer
      tenor:
        type: integer
      updated_at:
        type: string
      used_amount:
        type: integer
      user_id:
        type: string
    type: object
  model.FindCustomerLimitWrapper:
    properties:
      data:
        items:
          $ref: '#/definitions/model.CustomerLimitWrapper'
        type: array
      ok:
        type: boolean
    type: object
  model.FindSelfResponseWrapper:
    properties:
      data:
        $ref: '#/definitions/model.UserWrapper'
      ok:
        type: boolean
    type: object
  model.SignInRequest:
    properties:
      nik:
        type: string
      password:
        type: string
    required:
    - nik
    - password
    type: object
  model.SignInResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  model.SignInResponseWrapper:
    properties:
      data:
        $ref: '#/definitions/model.SignInResponse'
      ok:
        type: boolean
    type: object
  model.SignUpRequest:
    properties:
      date_of_birth:
        type: string
      full_name:
        maxLength: 100
        minLength: 3
        type: string
      id_card_photo_url:
        type: string
      legal_name:
        maxLength: 100
        minLength: 3
        type: string
      nik:
        type: string
      password:
        type: string
      place_of_birth:
        maxLength: 100
        minLength: 2
        type: string
      salary:
        minimum: 0
        type: integer
      selfie_photo_url:
        type: string
    required:
    - date_of_birth
    - full_name
    - id_card_photo_url
    - legal_name
    - nik
    - password
    - place_of_birth
    - salary
    - selfie_photo_url
    type: object
  model.SignUpResponse:
    type: object
  model.SignUpResponseWrapper:
    properties:
      data:
        $ref: '#/definitions/model.SignUpResponse'
      ok:
        type: boolean
    type: object
  model.UserWrapper:
    properties:
      created_at:
        type: string
      date_of_birth:
        type: string
      full_name:
        type: string
      id:
        type: string
      id_card_photo_url:
        type: string
      is_admin:
        type: boolean
      legal_name:
        type: string
      nik:
        type: string
      place_of_birth:
        type: string
      salary:
        type: integer
      selfie_photo_url:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: ghalmas.shanditya.putra.agung@gmail.com
    name: Ghalmas Shanditya Putra Agung
  description: This is a sample server for a Loan Application.
  termsOfService: http://swagger.io/terms/
  title: Loan App API
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Authenticate user with nik and password to get access and refresh
        tokens
      parameters:
      - description: Sign in credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SignInResponseWrapper'
      summary: Sign in user
      tags:
      - Authentication
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Register a new user with nik, full_name, and other details
      parameters:
      - description: Sign up credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SignUpResponseWrapper'
      summary: Sign up user
      tags:
      - Authentication
  /user/limit:
    get:
      consumes:
      - application/json
      description: Retrieve the customer limits for the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FindCustomerLimitWrapper'
      security:
      - bearer: []
      summary: Find Customer Limits
      tags:
      - User
  /user/me:
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's information.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FindSelfResponseWrapper'
      security:
      - bearer: []
      summary: Find Self User
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  bearer:
    description: Enter the token with the `Bearer ` prefix, e.g. "Bearer abcde12345"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
